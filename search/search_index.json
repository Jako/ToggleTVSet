{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ToggleTVSet Toggle the visibility of template variables sets by the value of a template variable. Requirements MODX Revolution 2.3+ PHP v5.3+ Features See this Movie for a short introduction:","title":"Description"},{"location":"#toggletvset","text":"Toggle the visibility of template variables sets by the value of a template variable.","title":"ToggleTVSet"},{"location":"#requirements","text":"MODX Revolution 2.3+ PHP v5.3+","title":"Requirements"},{"location":"#features","text":"See this Movie for a short introduction:","title":"Features"},{"location":"contributors/","text":"The ToggleTVSet project was started in 2015 by Patrick Percy Blank and was developed further and packaged as MODX Extra package by Thomas Jakobi . Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.","title":"Contributors"},{"location":"donate/","text":"Support ToggleTVSet ToggleTVSet is and always will be free and open-source, but it still requires many man-hours of development, bug-fixing, maintaining the docs, support in MODX forums and on GitHub between the releases. Please support the ongoing and past development of ToggleTVSet by making a donation below. ToggleTVSet development is sponsored by Treehillstudio \u2013 MODX Development in M\u00fcnsterland.","title":"Donate"},{"location":"donate/#support-toggletvset","text":"ToggleTVSet is and always will be free and open-source, but it still requires many man-hours of development, bug-fixing, maintaining the docs, support in MODX forums and on GitHub between the releases. Please support the ongoing and past development of ToggleTVSet by making a donation below. ToggleTVSet development is sponsored by Treehillstudio \u2013 MODX Development in M\u00fcnsterland.","title":"Support ToggleTVSet"},{"location":"installation/","text":"Install from MODX Extras Search for ToggleTVSet in the Package Manager of a MODX installation and install it in there. Manual installation If you can't access the MODX Extras Repository in your MODX installation, you can manually install ToggleTVSet. Download the transport package from MODX Extras (or one of the pre built transport packages in _packages ) Upload the zip file to your MODX installation's core/packages folder or upload it manually in the MODX Package Manager. In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button. ToggleTVSet should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation. Build it from source To build and install the package from source you could use Git Package Management . The GitHub repository of ToggleTVSet contains a config.json to build that package locally. Use this option, if you want to debug ToggleTVSet and/or contribute bugfixes and enhancements.","title":"Installation"},{"location":"installation/#install-from-modx-extras","text":"Search for ToggleTVSet in the Package Manager of a MODX installation and install it in there.","title":"Install from MODX Extras"},{"location":"installation/#manual-installation","text":"If you can't access the MODX Extras Repository in your MODX installation, you can manually install ToggleTVSet. Download the transport package from MODX Extras (or one of the pre built transport packages in _packages ) Upload the zip file to your MODX installation's core/packages folder or upload it manually in the MODX Package Manager. In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button. ToggleTVSet should now show up in the list of available packages. Click the corresponding 'Install' button and follow instructions to complete the installation.","title":"Manual installation"},{"location":"installation/#build-it-from-source","text":"To build and install the package from source you could use Git Package Management . The GitHub repository of ToggleTVSet contains a config.json to build that package locally. Use this option, if you want to debug ToggleTVSet and/or contribute bugfixes and enhancements.","title":"Build it from source"},{"location":"usage/","text":"Usage Example use case: In one of your templates you want to be able to select one of four different headers. Each type of header needs one or more TVs but you only want to show the TVs needed for the selected type of header. Inside your template you want to use different chunks for templating. Warning Please don't misuse this extra and assign all TVs to all templates and hide them by the default value of a toggling TV. This could cause speed problems in the backend and also in the frontend because the template variable handling is not that effective i.e. in the getResources snippet. Example Setup You have four different headers (Simple, Jumbotron, Carousel, Cover). For each one of them you use different TVs. Step 1 - Create your header TVs Simple Header TV Header_Headline (6) - a simple Text TV Jumbotron TVs Jumbotron_Background_Color (7) - Colorpicker TV Jumbotron_Background_Image (8) - Image TV Jumbotron_RTE (9) - Richtext TV Carousel TVs Carousel_Gallery (10) - MIGX TV Cover TVs Cover_Background_Image (11) - Image TV Cover_RTE (12) - Richtext TV Header Select TV Header (13) - Single Select TV Input Option Values: Standard==6||Jumbotron==7,8,9||Carousel==10||Cover==11,12 Allow Blank: false Default: 6 Enable typeahead: false Give each input option a label and add the ids of the TVs used as comma separated values. Note Be careful not to add empty spaces inside the value! Bad: \"Standard==6||Jumbotron== 7 , 8, 9 ||Carousel==10||Cover==11,12\" Good: \"Standard==6||Jumbotron==7,8,9||Carousel==10||Cover==11,12\" Step 2 - Fill the MODX system setting Locate the toggletvset.toggletvs MODX system setting and fill it with the ID of the Header Select TV. Note The ID numbers of the template variables in the example ar just for demonstation and should be different in your installation. Output Filter getTVLabel This output filter retrieves the label of a corresponding TV value. If you have a selectTV with these input options Standard==4||Carousel==8||Cover==9,10||Jumbotron==5,6,7 you could use the following call i.e. in the template [[$[[*selectTV:getTVLabel]]]] This will be replaced by the MODX parser to i.e. [[$Standard]] if the value of [[*selectTV]] is 4 . If you are working in getResources/pdoResources, etc. and your TV is prefixed, use it like this: [[+tv.selectTV:getTVLabel=`tv.`]] getTVNames This output filter retrieve names of TVs from a list of TV ids. You could get the TV names of the corresponding TV value with it. Example usage: &includeTVs=`[[*selectTV:getTVNames]]` System Settings ToggleTVSet uses the following system settings in the namespace toggletvset : Key Description Default toggletvset.toggletvs Comma separated list of template variable ids that should toggle the visibility of other template variables. - toggletvset.toggletvs_clearhidden Clear template variables that are hidden by ToggleTVSet. No toggletvset.debug Log debug informations in the MODX ystem log. No","title":"Usage"},{"location":"usage/#usage","text":"Example use case: In one of your templates you want to be able to select one of four different headers. Each type of header needs one or more TVs but you only want to show the TVs needed for the selected type of header. Inside your template you want to use different chunks for templating. Warning Please don't misuse this extra and assign all TVs to all templates and hide them by the default value of a toggling TV. This could cause speed problems in the backend and also in the frontend because the template variable handling is not that effective i.e. in the getResources snippet.","title":"Usage"},{"location":"usage/#example-setup","text":"You have four different headers (Simple, Jumbotron, Carousel, Cover). For each one of them you use different TVs.","title":"Example Setup"},{"location":"usage/#step-1-create-your-header-tvs","text":"","title":"Step 1 - Create your header TVs"},{"location":"usage/#simple-header-tv","text":"Header_Headline (6) - a simple Text TV","title":"Simple Header TV"},{"location":"usage/#jumbotron-tvs","text":"Jumbotron_Background_Color (7) - Colorpicker TV Jumbotron_Background_Image (8) - Image TV Jumbotron_RTE (9) - Richtext TV","title":"Jumbotron TVs"},{"location":"usage/#carousel-tvs","text":"Carousel_Gallery (10) - MIGX TV","title":"Carousel TVs"},{"location":"usage/#cover-tvs","text":"Cover_Background_Image (11) - Image TV Cover_RTE (12) - Richtext TV","title":"Cover TVs"},{"location":"usage/#header-select-tv","text":"Header (13) - Single Select TV Input Option Values: Standard==6||Jumbotron==7,8,9||Carousel==10||Cover==11,12 Allow Blank: false Default: 6 Enable typeahead: false Give each input option a label and add the ids of the TVs used as comma separated values. Note Be careful not to add empty spaces inside the value! Bad: \"Standard==6||Jumbotron== 7 , 8, 9 ||Carousel==10||Cover==11,12\" Good: \"Standard==6||Jumbotron==7,8,9||Carousel==10||Cover==11,12\"","title":"Header Select TV"},{"location":"usage/#step-2-fill-the-modx-system-setting","text":"Locate the toggletvset.toggletvs MODX system setting and fill it with the ID of the Header Select TV. Note The ID numbers of the template variables in the example ar just for demonstation and should be different in your installation.","title":"Step 2 - Fill the MODX system setting"},{"location":"usage/#output-filter","text":"","title":"Output Filter"},{"location":"usage/#gettvlabel","text":"This output filter retrieves the label of a corresponding TV value. If you have a selectTV with these input options Standard==4||Carousel==8||Cover==9,10||Jumbotron==5,6,7 you could use the following call i.e. in the template [[$[[*selectTV:getTVLabel]]]] This will be replaced by the MODX parser to i.e. [[$Standard]] if the value of [[*selectTV]] is 4 . If you are working in getResources/pdoResources, etc. and your TV is prefixed, use it like this: [[+tv.selectTV:getTVLabel=`tv.`]]","title":"getTVLabel"},{"location":"usage/#gettvnames","text":"This output filter retrieve names of TVs from a list of TV ids. You could get the TV names of the corresponding TV value with it. Example usage: &includeTVs=`[[*selectTV:getTVNames]]`","title":"getTVNames"},{"location":"usage/#system-settings","text":"ToggleTVSet uses the following system settings in the namespace toggletvset : Key Description Default toggletvset.toggletvs Comma separated list of template variable ids that should toggle the visibility of other template variables. - toggletvset.toggletvs_clearhidden Clear template variables that are hidden by ToggleTVSet. No toggletvset.debug Log debug informations in the MODX ystem log. No","title":"System Settings"}]}